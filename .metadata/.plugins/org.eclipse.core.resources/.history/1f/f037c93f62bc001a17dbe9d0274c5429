package de.netzebw.web;

import javax.inject.Inject;
import javax.ws.rs.core.Response;

import org.apache.commons.lang3.StringUtils;

import de.netzebw.data.entity.Incident;
import de.netzebw.service.IncidentService;
import de.netzebw.to.ErrorTO;
import de.netzebw.to.IncidentTO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequiredArgsConstructor
public class IncidentResource implements IncidentResourceDoc {

  @Inject
  private IncidentService service;

  @Override
  public Response createOrUpdate(
      final String id,
      final IncidentTO incident) {

    if (!isUuidAndIdEqual(incident, id)) {
      return Response.status(400).entity(ErrorTO.builder().errorCode(1).httpStatusCode(400).errorMessage("Requested id and object uuid must match.").build()).build();
    }

    
    Incident i = service.find(service.create());
    return Response.ok().entity(i).build();
  }

  private Boolean isUuidAndIdEqual(final IncidentTO incident, final String id) {  
    log.info("is null {}" , incident==null);
    log.info("uuid");
      log.info("String equals {} ", StringUtils.equals(incident.getUuid(), id));
    return incident == null || incident.getUuid() == null || StringUtils.isEmpty(incident.getUuid())
        ? Boolean.FALSE
        : StringUtils.equals(incident.getUuid(), id);

  }

}
