package de.netzebw.web;

import static javax.ws.rs.core.MediaType.APPLICATION_JSON;

import java.util.Optional;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import org.eclipse.microprofile.openapi.annotations.responses.APIResponse;

import com.fasterxml.jackson.core.JsonProcessingException;

import de.netzebw.service.MessageService;
import de.netzebw.to.MessageTO;
import lombok.RequiredArgsConstructor;
import software.amazon.awssdk.services.sns.model.PublishResponse;

/**
 * Message resource controller to post new messages.
 * 
 * @author fri
 *
 */
@Path("/message")
@Consumes(APPLICATION_JSON)
@Produces(APPLICATION_JSON)
@RequiredArgsConstructor
public class MessageResource {

  private final MessageService msgService;

  /**
   * 
   * @param message
   *                {@link MessageTO}
   * @return Response {@link Response}
   *         with status code 202 for accepted or if something goes wrong with 400 for bad request
   * @throws JsonProcessingException
   */
  @POST
  @Path("/gui")
  @APIResponse(responseCode = "202")
  public Response publish(
      @NotNull
      @Valid
      final MessageTO message) throws JsonProcessingException {
    final Optional<PublishResponse> opt = msgService.publish(message);
    return opt.isPresent()
        ? Response.status(202).entity(opt.get()).build()
        : Response.status(400).build();

  }

}
