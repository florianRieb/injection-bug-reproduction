package de.netzebw.to;

import javax.validation.constraints.Max;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.Size;

import org.eclipse.microprofile.openapi.annotations.media.Schema;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;

import de.netzebw.to.enums.InputChannel;
import de.netzebw.to.enums.ReporterRole;
import de.netzebw.to.enums.ReporterType;
import io.quarkus.runtime.annotations.RegisterForReflection;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Object that the user wants to publish as a message.
 * 
 * @author fri
 *
 */
@AllArgsConstructor
@NoArgsConstructor
@Builder
@Data
@RegisterForReflection
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_DEFAULT)
public class MessageTO {

  @Schema(description = "ist anonym", required = false)
  private Boolean anonymous;

  @Schema(description = "Melder Kategorie", required = false)
  private ReporterType reporterType;

  @Schema(description = "Melder Rolle", required = false)
  private ReporterRole reporterRole;

  @Size(max = 50)
  @Schema(description = "Melder Rolle sonstiges", required = false)
  private String reporterRoleOther;

  @Size(max = 50)
  @Schema(description = "Straße der Meldung", required = false)
  private String street;

  @Size(max = 5)
  @Schema(description = "PLZ der Meldung", required = false)
  private String zipCode;

  @NotEmpty
  @Size(max = 50)
  @Schema(description = "Ort der Meldung", required = true, example = "Stuttgart")
  private String city;

  @Size(max = 50)
  @Schema(description = "Teilort der Meldung", required = false, example = "Möhringen")
  private String cityDistrict;

  @Size(max = 5)
  @Schema(description = "HausNr der Meldung", required = false)
  private String houseNo;
  
  @Max(99999)
  @Schema(description = "LeuchtstellenNr", required = false)
  private Integer lightingNo;

  @Size(max = 200)
  @Schema(description = "Bemerkungen zum Ort der Meldung", required = false)
  private String furtherRemarks;

  @Schema(description = "Eingangskanal", required = false)
  private InputChannel inputChannel;

  @Schema(description = "Zeitstempel der Erfassung", required = false, example = "2020-06-05T12:56:25.406")
  private String reportingTimestamp;

  @Size(max = 50)
  @Schema(description = "Zeitzonen Id nach ISO-8601", required = false, example = "Europe/Berlin")
  private String zoneId;

  @Size(max = 500)
  @Schema(description = "Anmerkungen zur Meldung  ", required = false)
  private String description;

  @Schema(description = "Melder ist Betriebskunde", required = false)
  private Boolean managedCustomer;

  @Size(max = 50)
  @Schema(description = "externe Id", required = false)
  private String externalId;

  @Size(max = 50)
  @Schema(description = "Request Id", required = false)
  private String requestId;

  private ReporterTO reporter;

}
